    # Print qualifying results with team name
    print("\n - - - Qualifying Order - - - \n")
    max_name_length = max(len(driver_name) for (_, driver_name), _ in sorted_qualifying_results)
    max_order_length = len(str(len(sorted_qualifying_results)))  # Length of the highest numbered order

    for i, ((team_name, driver_name), qualifying_result) in enumerate(sorted_qualifying_results):
        supplier = teams[team_name].supplier
        color = teams[team_name].color
        main_team_name, *rest = team_name.split(" - ")  # Split team name at dash
        colored_team_name = Text(main_team_name, style=color)  # Apply color to main part

        # Construct the full line with colors
        line = Text(f"{i+1:2}. {driver_name.ljust(max_name_length)}     (")
        line.append(colored_team_name)  # Add the colored team name
        if rest:
            line.append(f" - {' '.join(rest)}")  # Append the remaining part of team name if exists
        if supplier:
            line.append(f" - {supplier}")
        line.append(")")

        console.print(line)
        time.sleep(0.5)  # Add a delay between each entry

   # Print DNQ drivers
    if dnq_results:
        print("\n - - - Failed to Qualify - - - \n")
        for i, ((team_name, driver_name), qualifying_result) in enumerate(dnq_results):
            supplier = teams[team_name].supplier
            color = teams[team_name].color  # Retrieve hex color
            main_team_name, *rest = team_name.split(" - ")  # Split team name at dash
            colored_team_name = Text(main_team_name, style=color)  # Apply color to main part

            # Construct the full line with colors
            line = Text(f"{i+1+grid_size:2}. {driver_name.ljust(max_name_length)}     (")
            line.append(colored_team_name)  # Add the colored team name
            if rest:
                line.append(f" - {' '.join(rest)}")  # Append remaining team name, if exists
            if supplier:
                line.append(f" - {supplier}")
            line.append(")")

            console.print(line)
            time.sleep(0.25)  # Add a delay between each entry